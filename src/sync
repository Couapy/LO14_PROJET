#!/bin/bash

if [ $# -eq 0 ]; then
    echo "Ce script attend un argument."
    command="help"
else
    command=$1
fi

function get_lib {
    clone_path=$(dirname $0)
    echo $clone_path/lib/$1
}

function init {
    if [ -d "$1/.sync" ]; then
        echo "Le dossier est déjà initialisé."
    else
        init_path=$(get_lib init)
        $($init_path $1)
    fi
}

function add {
    if [ $(ls | wc -c) -ne 0 ]; then
        echo "Le dossier actuel n'est pas vide."
        exit
    fi

    local=$PWD
    distant=$(readlink -f $1)

    if [ "$distant" != "" ]; then
        if [ -d $distant ]; then
            if [ -d "$distant/.sync" ]; then
                # On initialise le dossier et on met à jour le distant
                init $local
                echo $distant > $local/.sync/remote
                echo $local > $distant/.sync/remote

                echo "Initialisation du dossier terminée."

                # On copie les fichiers
                clone_path=$(get_lib clone)
                $($clone_path $distant $local)

                echo "Clonage du dossier mirroir terminé."
            else
                echo "Le dossier spécifié n'est pas initialisé."
            fi
        else
            echo "Le dossier spécifié n'existe pas."
        fi
    else
        echo "Veuillez transmettre le dossier à synchroniser en argument."
    fi
}

function update_journal {
    journal_path=$(get_lib journal)
    $($journal_path $1)
}

function sync {
    local=$PWD
    distant=$(cat $local/.sync/remote)

    sync_path=$(get_lib sync)
    $($sync_path $local $distant)
    
    update_journal $local
    update_journal $distant
}

function main {
    if [ $command == "init" ]; then
        init .
        exit
    fi

    if [ $command == "add" ]; then
        add $2
        exit
    fi

    if [ $command == 'sync' ]; then
        sync
        exit
    fi

    # On affiche l'aide ici
    src=$(dirname $0)
    cat $src/help
}

main $@
